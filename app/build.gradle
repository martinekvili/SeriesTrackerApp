apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 26

    defaultConfig {
        applicationId "hu.bme.aut.mobsoftlab.seriestrackerapp"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "0.1-alpha"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"

    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
            ext.enableCrashlytics = false
        }
        prod {

        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release' && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

ext {
    retrofit_version = "2.3.0"
    swagger_annotations_version = "1.5.15"
    threetenbp_version = "1.3.5"
    json_fire_version = "1.8.0"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Android support libraries
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:cardview-v7:26.1.0'
    implementation 'com.android.support:recyclerview-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'

    // Dagger 2
    implementation 'com.google.dagger:dagger:2.15'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.15'

    // EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'

    // Generated Swagger API client
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    mockImplementation "com.squareup.retrofit2:retrofit-mock:$retrofit_version"
    implementation "io.swagger:swagger-annotations:$swagger_annotations_version"
    implementation "io.gsonfire:gson-fire:$json_fire_version"
    implementation "org.threeten:threetenbp:$threetenbp_version"

    // SugarORM
    implementation 'com.github.satyan:sugar:1.5'

    // ButterKnife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    // glide
    implementation("com.github.bumptech.glide:glide:4.7.1") {
        exclude group: "com.android.support"
    }
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'

    // Crashlytics
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.2@aar') {
        transitive = true
    }

    // Google Analytics
    implementation 'com.google.android.gms:play-services-analytics:15.0.2'

    // test
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:3.8'
    testImplementation 'org.mockito:mockito-core:2.18.3'

    // androidTest
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
