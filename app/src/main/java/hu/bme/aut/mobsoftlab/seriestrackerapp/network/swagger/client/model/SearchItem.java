/*
 * OMDb API
 * The OMDb API is a RESTful web service to obtain movie information, all content and images on the site are contributed and maintained by our users.
 *
 * OpenAPI spec version: 1.0
 * Contact: bfritz@fadingsignal.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package hu.bme.aut.mobsoftlab.seriestrackerapp.network.swagger.client.model;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * SearchItem
 */
public class SearchItem {
    @SerializedName("Title")
    private String title = null;

    @SerializedName("Year")
    private String year = null;

    @SerializedName("imdbID")
    private String imdbID = null;

    @SerializedName("Type")
    private String type = null;

    @SerializedName("Poster")
    private String poster = null;

    public SearchItem title(String title) {
        this.title = title;
        return this;
    }

    /**
     * Get title
     *
     * @return title
     **/
    @ApiModelProperty(value = "")
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public SearchItem year(String year) {
        this.year = year;
        return this;
    }

    /**
     * Get year
     *
     * @return year
     **/
    @ApiModelProperty(value = "")
    public String getYear() {
        return year;
    }

    public void setYear(String year) {
        this.year = year;
    }

    public SearchItem imdbID(String imdbID) {
        this.imdbID = imdbID;
        return this;
    }

    /**
     * Get imdbID
     *
     * @return imdbID
     **/
    @ApiModelProperty(value = "")
    public String getImdbID() {
        return imdbID;
    }

    public void setImdbID(String imdbID) {
        this.imdbID = imdbID;
    }

    public SearchItem type(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     **/
    @ApiModelProperty(value = "")
    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public SearchItem poster(String poster) {
        this.poster = poster;
        return this;
    }

    /**
     * Get poster
     *
     * @return poster
     **/
    @ApiModelProperty(value = "")
    public String getPoster() {
        return poster;
    }

    public void setPoster(String poster) {
        this.poster = poster;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SearchItem searchItem = (SearchItem) o;
        return Objects.equals(this.title, searchItem.title) &&
                Objects.equals(this.year, searchItem.year) &&
                Objects.equals(this.imdbID, searchItem.imdbID) &&
                Objects.equals(this.type, searchItem.type) &&
                Objects.equals(this.poster, searchItem.poster);
    }

    @Override
    public int hashCode() {
        return Objects.hash(title, year, imdbID, type, poster);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SearchItem {\n");

        sb.append("    title: ").append(toIndentedString(title)).append("\n");
        sb.append("    year: ").append(toIndentedString(year)).append("\n");
        sb.append("    imdbID: ").append(toIndentedString(imdbID)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    poster: ").append(toIndentedString(poster)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

